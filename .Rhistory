swirl()
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files
list.files()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2) each = 10)
rep(c(0,1,2), each = 10)
num_vect <- numeric(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Kanti")
my_name
past(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z",sep=""))
paste(1:3,c("X","Y","Z"),sep=""))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
swirl()
x <- 4L
class(x)
x <- c(4,"a", TRUE)
class(x)
read.csv(hw1_data 2.csv)
read.csv("hw1_data 2.csv")
getwd()
setwd("Users/kkeislar/Downloads")
hw1_data.2 <- read.csv("~/Downloads/hw1_data 2.csv")
View(hw1_data.2)
nrows(h21.data.2)
nrows(hw1_data.2)
nrow(hw1_data.2)
head(hw1_data.2, 2)
tail(hw1_data.2, 2)
x <- hw1_data.2$Ozone
x
y <- is.na(x)
y
z<-c(1,rep=153)
z
a <- z|y
len(y)
length(y0)
length(y)
length(z)
z <- rep(1, times=40)
z
z <- rep(1, times=153)
z
a <- z|y
a
a <- z&y
a
?coerce
as(y,numeric)
z
z <- rep(0,times=153)
a <- z+y
a
b <- a[a==1]
b
length(b)
y
o <- hw1_data.2$Ozone
o
o2 <- o[!NA]
o2
o2 <- o[o != NA]
o2 <- o[o != NA]
o2
o2 <- o[o > 0]
o2
o2 <- is.na(o)
o2
o2 <- !o2
o2
o
bad <- is.na(o)
bad
o2 <- o[!bad]
o2
mean(o2)
df <- hw2_data.2[$Ozone > 31] & hw_data.2[$Temp > 90]
df <- hw2_data.2[Ozone > 31] & hw_data.2[Temp > 90]
df <- hw1_data.2[Ozone > 31] & hw_data.2[Temp > 90]
df <- hw1_data.2[$Ozone > 31] & hw_data.2[$Temp > 90]
x <- hw1_data.2$Ozone
x
ozone <- hw1_data.2$Ozone
temp <- hw_data.2$Temp
temp <- hw1_data.2$Temp
z
ozone[ozone<=31] <- NA
ozone
temp[temp<=90] <- NA
good <- complete.cases(ozone,temp)
good
solar <- hw1_data.2$Solar.R
solar
good <- complete.cases(temp,ozone,solar)
good
solar[good]
mean(solar[good])
month <- hw1_data.2$Month
month[month!=6] <- NA
month
good2 <- complete.cases(month,temp)
good2
month
temp
temp <- hw1_data.2$Temp
temp
good2 <- complete.cases(temp,month)
good2
mean(temp[good2])
month <- hw1_data.2$Month
month
month[month!=5] <- NA
month
ozone
ozone <- hw1_data.2$Ozone
ozone
good3 <- complete.cases(ozone,month)
good3
max(ozone[good3])
q15 <- hw1_data.2$Ozone
q15
q15[47]
swirl()
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names()
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20,4,5)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
exit
done
bye()
?letter
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x, n=10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
args(paste)
?paste
?optim
swirl()
TRUE==TRUE
(FALSE==TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE |\ c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[lenght(x)]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("I'm", "trying")
submit()
madlibs("wilder","blue","little pot")
mad_libs("wilder","blue","little pot")
submit()
'I' %p% 'love' %p% 'R!'
d1 <-Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POXIClt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time() -t1
difftime(Sys.time(), t1, units-'days')
difftime(Sys.time(), t1, units='days')
bye()
v <- c(1,2,3,NA,5,6)
v <- c(1,NA,1)
v
sum(v)
sum(v,na.rm=TRUE)
mean(v)
mean(v,na.rm=TRUE)
mean(v,na.rm=TRUE)
?rowmeans
?rowMeans
?mapply
?gl
gl(2,2,20)
?str
?split
?list.files
library(swirl)
library('swirl')
swirl()
getwd()
exit()
quit()
library('swirl')
ls()
rm(list=ls())
ls()
swirl()
menu()
menu
main()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_list <- sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data("iris")
data(iris)
?iris
class(iris)
View(iris)
?apply
?sapply
?tapply
?vapply
sapply(mean,iris)
attributes(iris)
lapply(mean,iris$names)
iris$names
?names
names(iris)
lapply(mean,names(iris))
lapply(names(iris),mean)
names(iris)
class(names(iris))
x <- as.factor(species)
x <- as.factor(iris["species"])
x <- as.factor(iris["Species"])
x <- as.factor(iris[["Species"]])
x
tapply(iris[Sepal.Length],x,mean)
tapply(iris$Sepal.Length,x,mean)
?apply
apply(iris,2,mean)
apply(iris,2,mean, na.rm=TRUE)
?mean
im <- as.matrix(iris)
im
apply(iris[1:4],2,mean,na.rm=TRUE)
apply(iris[1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
?with
with(mtcars,tapply(mpg,vyl,mean))
with(mtcars,tapply(mpg,cyl,mean))
View(mtcars)
split(mtcars,mtcars$cyl)
lapply(mtcars,mean)
sapply(mtcars,cyl,mean)
?mean
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$cyl,mtcars$mpg,mean)
?split
sapply(split(mtcars$mpg,mtcars$cyl),mean)
apply(mtcars,2,mean)
tapply(mtcars$hp,mtcars$cyl,mean)
res <- tapply(mtcars$hp,mtcars[["cyl"]][[c("4","8")]],mean)
res <- tapply(mtcars$hp,mtcars$cyl,mean)
res
res[4]-res[8]
class(res)
res[1]-res[2]
debug(ls)
ls()
res[1]-res[3]
ls
ls()
getwd()
exit
getwd()
setwd("/Documents")
setwd("/Users/kkeislar/Documents")
getwd()
setwd("/Users/kkeislar/Documents/R prog/Week 3")
getwd()
ls()
list.files(getwd())
rm(list.files(ls()))
rm(list=ls())
list.files(getwd())
setwd("/Users/kkeislar/Documents/R prog/Week 3/ProgrammingAssignment2")
list.files(getwd())
sol
getwd()
ls
ls()
getwd()
list.files(getwd())
View(cachematrix.R)
View("cachematrix.R")
open("cachementrix.R")
?open
open(paste(getwd(),"cachematrix.R",sep="/"))
p <- paste(getwd(),"cachematrix.R",sep="/")
p
setwd(p)
p <- paste(getwd(),"cachematrix",sep="/")
p
setwd(p)
getwd()
list.files(getwd())
View(cachematrix)
View("cachematrix.R"")
c
sdf
exit
